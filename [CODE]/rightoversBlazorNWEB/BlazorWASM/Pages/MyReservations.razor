@page "/MyReservations"
@attribute [Authorize]
@using Domain.Classes
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@using Domain.DTOs
@inject IUserService userService
@inject IFoodPostService foodPostService
@inject DialogService DialogService
@inject NavigationManager navMgr

@if (allReservations == null)
{
    <p>Loading reservations...</p>
}
else
{
    <RadzenPanel AllowCollapse="false" Style="width: 700px; margin: 40px auto;">
        <HeaderTemplate>
            <h4 class="m-0 d-flex align-items-center">
                <RadzenIcon Icon="alarm" Class="me-1"/><b>Active Reservations</b>
            </h4>
        </HeaderTemplate>
        <ChildContent>
            <RadzenCard Class="mt-3">
                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@activeReservations" TItem="Reservation">
                    <Template Context="reservation">
                        <RadzenCard Style="width: 100%;" Class="rz-border-radius-3">
                            <div class="d-flex row">
                                <div class="d-flex flex-row align-items-center col-6">
                                    <RadzenImage onclick="@(() => GoToFoodPost(reservation.FoodPost.PostId))" Path="@reservation.FoodPost.PictureUrl" Class="rz-border-radius-10 float-start me-3" Style="width: 80px; height: 80px; cursor: pointer;"/>
                                    <div>
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>@reservation.FoodPost.Title</strong>
                                        </RadzenText>
                                        <a onclick="@(() => @GoToUserProfile(@reservation.FoodPost.User.UserName))" class="mb-0 hover-underlined">@reservation.FoodPost.User.UserName </a>
                                    </div>
                                </div>
                                <div class="d-flex flex-column align-items-start col-6">
                                    <div>
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>When?</strong>
                                        </RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0"><strong>DATES: </strong>@reservation.FoodPost.StartDate.DayAndMonth() - @reservation.FoodPost.EndDate.DayAndMonth()</RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0"><strong>TIME: </strong>@reservation.FoodPost.StartTime.ToString() - @reservation.FoodPost.EndTime.ToString()</RadzenText>
                                    </div>
                                    <div class="mt-2">
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>Where?</strong>
                                        </RadzenText>
                                        <div>@reservation.FoodPost.User.Address</div>
                                    </div>
                                    <div class="mt-2">
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>Cook's Contact</strong>
                                        </RadzenText>
                                        <div>@reservation.FoodPost.User.PhoneNumber</div>
                                    </div>
                                    <div class="mt-2">
                                        <RadzenButton Click="@(() => ShowConfirmationDialog(@reservation))" ButtonStyle="ButtonStyle.Dark">Confirm Pickup</RadzenButton>
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenCard>
        </ChildContent>
        <SummaryTemplate>
            <RadzenCard class="mt-3">
                <b>@allReservations.Count() Reservations</b>
            </RadzenCard>
        </SummaryTemplate>
    </RadzenPanel>
    @*OLD RESERVATIONS *@
    <RadzenPanel Collapsed="true" AllowCollapse="true" Style="width: 700px; margin: 40px auto;">
        <HeaderTemplate>
            <h4 class="m-0 d-flex align-items-center">
                <RadzenIcon Icon="alarm" Class="me-1"/><b>Old Reservations</b>
            </h4>
        </HeaderTemplate>
        <ChildContent>
            <RadzenCard Class="mt-3">
                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@oldReservations" TItem="Reservation">
                    <Template Context="reservation">
                        <RadzenCard Style="width: 100%;" Class="rz-border-radius-3">
                            <div class="d-flex row">
                                <div class="d-flex flex-row align-items-center col-6">
                                    <RadzenImage Path="@reservation.FoodPost.PictureUrl" Class="rz-border-radius-10 float-start me-3" Style="width: 80px; height: 80px;"/>
                                    <div>
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>@reservation.FoodPost.Title</strong>
                                        </RadzenText>
                                        <a onclick="@(() => @GoToUserProfile(@reservation.FoodPost.User.UserName))" class="mb-0 hover-underlined">@reservation.FoodPost.User.UserName </a>
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenCard>
        </ChildContent>
        <SummaryTemplate>
            <RadzenCard class="mt-3">
                <b>@oldReservations.Count() Reservations</b>
            </RadzenCard>
        </SummaryTemplate>
    </RadzenPanel>
}


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;
    private bool showModal;

    IEnumerable<Reservation> allReservations;
    IEnumerable<Reservation> activeReservations;
    IEnumerable<Reservation> oldReservations;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;

        if (!isLoggedIn) return;

        userClaims = user.Claims;
        name = userClaims.First(claim => claim.Type.Equals("UserName")).Value;
        await base.OnInitializedAsync();
        await InitReservations();
    }

    private void GoToUserProfile(string username)
    {
        navMgr.NavigateTo($"/UserProfile/{username}");
    }

    private async Task InitReservations()
    {
        allReservations = await userService.GetAllReservationsByUser(name);
        foreach (var reservation in allReservations)
        {
            string posterName = reservation.FoodPost.User.UserName;
            reservation.User = await userService.GetUserByUsername(posterName);
        }
        activeReservations = allReservations.Where(r => r.FoodPost.PostState.Equals("reserved"));
        oldReservations = allReservations.Where(r => r.FoodPost.PostState.Equals("closed"));
        
    }

    private async Task ConfirmPickup(Reservation reservation)
    {
        PickUpDto pickupDto = new PickUpDto(reservation.FoodPost.PostId, reservation.User.UserName);
        await foodPostService.PickUpAsync(pickupDto);
        await InitReservations();
    }

    async Task ShowConfirmationDialog(Reservation reservation)
    {
        var result = await DialogService.OpenAsync("Confirm Pickup", ds =>
            @<div class="d-flex flex-column">
                <p class="no-mb">Are you sure you want to CONFIRM pickup?</p>
                <div class="d-flex flex-row align-items-center col-6">
                    <RadzenImage Path="@reservation.FoodPost.PictureUrl" Class="rz-border-radius-10 float-start me-3" Style="width: 80px; height: 80px;"/>
                    <div>
                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                            <strong>@reservation.FoodPost.Title</strong>
                        </RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0">@reservation.FoodPost.User.UserName </RadzenText>
                    </div>
                </div>
                <div class="d-flex flex-row justify-content-evenly">
                    <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Light" Class="me-1"/>
                    <RadzenButton Text="Confirm" Click="async () => { await ConfirmPickup(reservation); ds.Close(true); }" Class="me-1"/>
                </div>
            </div>);
    }
    
    

    private void GoToFoodPost(int fpId)
    {
        navMgr.NavigateTo($"/PostDetails/{fpId}");
    }

}