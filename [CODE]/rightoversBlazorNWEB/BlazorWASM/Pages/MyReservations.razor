@page "/MyReservations"
@attribute [Authorize]
@using Domain.Classes
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@inject IUserService userService

@if (reservations == null)
{
    <p>Loading reservations...</p>
}
else
{
    <RadzenPanel AllowCollapse="false" Style="width: 700px; margin: 40px auto;">
        <HeaderTemplate>
            <h4 class="m-0 d-flex align-items-center">
                <RadzenIcon Icon="alarm" Class="me-1"/><b>Your Reservations</b>
            </h4>
        </HeaderTemplate>
        <ChildContent>
            <RadzenCard Class="mt-3">
                <RadzenDataList PageSize="6" WrapItems="true" AllowPaging="true" Data="@reservations" TItem="Reservation">
                    <Template Context="reservation">
                        <RadzenCard Style="width: 100%;" Class="rz-border-radius-3">
                            <div class="d-flex row">
                                <div class="d-flex flex-row align-items-center col-6">
                                    <RadzenImage Path="@reservation.FoodPost.PictureUrl" Class="rz-border-radius-10 float-start me-3" Style="width: 80px; height: 80px;"/>
                                    <div>
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>@reservation.FoodPost.Title</strong>
                                        </RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0">@reservation.FoodPost.User.UserName </RadzenText>
                                    </div>
                                </div>
                                <div class="d-flex flex-column align-items-start col-6">
                                    <div>
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>When?</strong>
                                        </RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0">@reservation.FoodPost.StartDate.DayAndMonth() - @reservation.FoodPost.EndDate.DayAndMonth()</RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body2" class="mb-0">@reservation.FoodPost.StartTime.ToString() - @reservation.FoodPost.EndTime.ToString()</RadzenText>
                                    </div>
                                    <div class="mt-3">
                                        <RadzenText TextStyle="TextStyle.Subtitle1" class="mb-0">
                                            <strong>Where?</strong>
                                        </RadzenText>
                                        <div>@reservation.User.Address.ToString()</div>
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </RadzenCard>
        </ChildContent>
        <SummaryTemplate>
            <RadzenCard class="mt-3">
                <b>@reservations.Count() Reservations</b>
            </RadzenCard>
        </SummaryTemplate>
    </RadzenPanel>
}


@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; } = null!;

    private string? name;
    private IEnumerable<Claim>? userClaims;
    private bool isLoggedIn;

    IEnumerable<Reservation> reservations;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await AuthState;
        ClaimsPrincipal user = authState.User;
        isLoggedIn = user.Identity != null;

        if (!isLoggedIn) return;

        userClaims = user.Claims;
        name = userClaims.First(claim => claim.Type.Equals("UserName")).Value;
        await base.OnInitializedAsync();
        reservations = await userService.GetAllReservationsByUser(name);
    }

}